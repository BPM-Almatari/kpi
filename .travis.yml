# Don't double-build PR commits. See: http://stackoverflow.com/a/31882307/1877326
branches:
  only: 
    - master
dist: xenial
sudo: required
language: python
python:
  - "2.7"
services:
  - postgresql
addons:
  postgresql: "9.5"
  chrome: stable
  apt:
    packages:
      - build-essential
      - fontforge
      - gettext
      - git-core
      - libpcre3
      - libpcre3-dev
      - libpq-dev
      # for cypress
      - xvfb
      - libgtk2.0-0 
      - libnotify-dev 
      - libgconf-2-4 
      - libnss3 
      - libxss1 
      - libasound2
cache:
  directories:
    - $HOME/.pip-download-cache
    # keep the npm cache around to speed up installs
    - $HOME/.npm
    - $HOME/.cache
before_script:
  - psql -c 'create database travis_ci_test;' -U postgres
  # for Cypress
  - python manage.py runserver 127.0.0.1:8000 &
  - sleep 100
script:
  - npm run copy-fonts
  - npm run build
  # - pytest -vv --cov
  # - npm run test
  - npm run cypress:test
after_script:
  - coverage xml && python-codacy-coverage -r coverage.xml
  - coveralls
env:
  # All about YAML line breaks: https://stackoverflow.com/a/21699210
  - >-
       PIP_DOWNLOAD_CACHE=$HOME/.pip-download-cache
       DJANGO_DEBUG=True
       DJANGO_SECRET_KEY=ZGtvYm90cmF2aXM
       DJANGO_SETTINGS_MODULE=kobo.settings.testing
       DJANGO_LANGUAGE_CODES="en ar es fr hi ku pl pt zh-hans"
       DATABASE_URL="postgres://postgres@localhost:5432/travis_ci_test"
       TRAVIS_NODE_VERSION="8"
       PATH=$PATH:$HOME/build/kobotoolbox/kpi/node_modules/.bin/
       CYPRESS_baseUrl=http://127.0.0.1:8000/
install:
  -  >-
        rm -rf ~/.nvm &&
        git clone https://github.com/creationix/nvm.git ~/.nvm &&
        (cd ~/.nvm &&
        git checkout `git describe --abbrev=0 --tags`) &&
        source ~/.nvm/nvm.sh &&
        nvm install $TRAVIS_NODE_VERSION
  - npm install -g install npm@latest
  - npm config set strict-ssl false && npm ci
  - pip install --upgrade 'pip>=8.0' wheel
  - pip install pip-tools
  - pip-sync dependencies/pip/requirements.txt
  - >-
        git submodule init &&
        git submodule update --remote &&
        python manage.py compilemessages
  - pip install coverage codacy-coverage python-coveralls pytest-cov pytest-django pytest-env
  - pip install pytest==3.10  # Force install this version, has to be at the end
